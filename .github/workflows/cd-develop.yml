name: Deploy to dev server

on:
  workflow_dispatch:
    inputs:
      env_id:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - dev2
        - stage

jobs:
  deploy:
    name: Deploy on ${{ inputs.environment }} server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set dev env
        if: ${{ inputs.env_id == 'dev' }}
        run: |
          echo "HOST=${{ secrets.DEV_HOST }}" >> $GITHUB_ENV
          echo "USER=${{ secrets.DEV_USER }}" >> $GITHUB_ENV
          echo "PASS=${{ secrets.DEV_PASS }}" >> $GITHUB_ENV
          echo "TARGET_PATH=${{ secrets.DEV_TARGET_PATH }}" >> $GITHUB_ENV

      - name: Set dev2 env
        if: ${{ inputs.env_id == 'dev2' }}
        run: |
          echo "HOST=${{ secrets.DEV2_HOST }}" >> $GITHUB_ENV
          echo "USER=${{ secrets.DEV2_USER }}" >> $GITHUB_ENV
          echo "PASS=${{ secrets.DEV2_PASS }}" >> $GITHUB_ENV
          echo "TARGET_PATH=${{ secrets.DEV2_TARGET_PATH }}" >> $GITHUB_ENV

      - name: Set stage env
        if: ${{ inputs.env_id == 'stage' }}
        run: |
          echo "HOST=${{ secrets.STAGE_HOST }}" >> $GITHUB_ENV
          echo "USER=${{ secrets.STAGE_USER }}" >> $GITHUB_ENV
          echo "PASS=${{ secrets.STAGE_PASS }}" >> $GITHUB_ENV
          echo "TARGET_PATH=${{ secrets.STAGE_TARGET_PATH }}" >> $GITHUB_ENV

      - name: Set up sshpass
        run: |
          sudo apt-get install sshpass

      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Deploy
        run: |
          sshpass -p "${{ env.PASS }}" ssh -o StrictHostKeyChecking=no -tt "${{ env.USER }}@${{ env.HOST }}" "sudo chmod 777 -R ${{ env.TARGET_PATH }}"
          sshpass -p ${{ env.PASS }} rsync -e "ssh -o StrictHostKeyChecking=no" -rltzh -O --delete dist/rubic/ ${{ env.USER }}@${{ env.HOST }}:${{ env.TARGET_PATH }}
          sshpass -p "${{ env.PASS }}" ssh -o StrictHostKeyChecking=no -tt "${{ env.USER }}@${{ env.HOST }}" "sudo chmod 777 -R ${{ env.TARGET_PATH }}"
